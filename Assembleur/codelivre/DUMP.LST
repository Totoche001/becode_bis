Microsoft (R) Macro Assembler  Version 4.00                 9/18/87 15:34:29

                                                            Page     1-1
                                                            

                                ; DUMP.ASM: Utilitaire Dump 
                                 
                                ; ------Macros-------------------------- 
                                 
                                doscall macro   x 
                                        mov     ah,x 
                                        int     21h 
                                        endm 
                                 
                                outchar macro   x 
                                        mov     dl,x 
                                        doscall 2 
                                        endm 
                                 
 0000                           code    segment 
 0100                                   org     100h 
                                        assume  cs:code,ds:code 
 0100  EB 23 90                 start:  jmp     begin 
                                 
                                ; ------Variables---------------------- 
                                 
 0103  0000                     fcount  dw      0 
 0105  00                       eofflag db      0 
 0106  46 69 63 68 69 65 72     fnfmsg  db      'Fichier Absent$' 
       20 41 62 73 65 6E 74     
       24                       
 0115  30 31 32 33 34 35 36     hexchar db      '0123456789ABCDEF' 
       37 38 39 41 42 43 44     
       45 46                    
                                 
                                ; ----- Boucle Principale ------------- 
                                 
 0125  BA 005C                  begin:  mov     dx,5ch          ; fcb prepar‚ p
				ar DOS 
                                        doscall 0fh             ; ouvrir fichie
				r 
 0128  B4 0F                  1         mov     ah,0fh
 012A  CD 21                  1         int     21h
 012C  3C FF                            cmp     al,0ffh         ; retour de ff 
 012E  75 0A                            jne     d1              ; = fichier int
				rouvable 
 0130  BA 0106 R                        mov     dx,offset fnfmsg 
                                        doscall 9               ; envoyer messa
				ge et 
 0133  B4 09                  1         mov     ah,9
 0135  CD 21                  1         int     21h
 0137  EB 1E 90                         jmp     exit            ; terminer 
                                 
                                ; Si vous ˆtes arriv‚ ici, le fichier est inexi
				stant: commencer 
                                ; une lecture des donn‚es dans DTA … l'offset 8
				0h 
                                 
 013A  BA 005C                  d1:     mov     dx,5ch 
Microsoft (R) Macro Assembler  Version 4.00                 9/18/87 15:34:29

                                                            Page     1-2
                                                            

                                        doscall 14h             ; lire enregist
				r (128 octets par defaut) 
 013D  B4 14                  1         mov     ah,14h
 013F  CD 21                  1         int     21h
 0141  3C 01                            cmp     al,1            ; retour 1 sign
				ifie enregistrement 
 0143  74 12                            je      exit            ; vide -- donc 
				fin 
 0145  3C 03                            cmp     al,3            ; retour 3 sign
				ifie enregistrement 
 0147  75 04                            jne     d2              ; partiellement
				 vide --fin aprŠs 
 0149  FE 06 0105 R                     inc     eofflag         ; sorti de l'en
				registrement 
 014D  E8 0159 R                d2:     call    outrec          ; sortir des 12
				8 octets du DTA 
 0150  80 3E 0105 R 01                  cmp     eofflag,1       ; dernier 128 o
				ctets ? 
 0155  75 E3                            jne     d1              ; sinon saut au
				 sommet 
 0157  CD 20                    exit:   int     20h 
                                 
 0159                           outrec  proc    near 
 0159  BD 0080                          mov     bp,80h          ; bp pointe au 
				bas du DTA 
 015C  E8 018C R                or1:    call    outcnt 
 015F  E8 01A7 R                        call    outhex 
 0162  E8 01CD R                        call    outasci 
                                        outchar 13 
 0165  B2 0D                  1         mov     dl,13
 0167  B4 02                  2         mov     ah,2
 0169  CD 21                  2         int     21h
                                        outchar 10 
 016B  B2 0A                  1         mov     dl,10
 016D  B4 02                  2         mov     ah,2
 016F  CD 21                  2         int     21h
 0171  83 C5 10                         add     bp,16           ; adjuster poin
				ter de base 
 0174  83 06 0103 R 10                  add     fcount,16       ; et comptage d
				es fichiers 
 0179  81 FD 0100                       cmp     bp,100h         ; fini aprŠs 12
				8 octets (8 lignes) 
 017D  75 DD                            jne     or1 
                                        outchar 13 
 017F  B2 0D                  1         mov     dl,13
 0181  B4 02                  2         mov     ah,2
 0183  CD 21                  2         int     21h
                                        outchar 10 
 0185  B2 0A                  1         mov     dl,10
 0187  B4 02                  2         mov     ah,2
 0189  CD 21                  2         int     21h
 018B  C3                               ret 
                                outrec  endp 
                                 
Microsoft (R) Macro Assembler  Version 4.00                 9/18/87 15:34:29

                                                            Page     1-3
                                                            

 018C                           outcnt  proc    near 
 018C  A1 0103 R                        mov     ax,fcount       ; d'abord, sort
				ie caract fichier 
 018F  8A C4                            mov     al,ah           ; coumpte comme
				 2 octets, MSB premiers 
 0191  E8 01E7 R                        call    outbyte         ; octets de sor
				tie envoient caractŠres 
 0194  A1 0103 R                        mov     ax,fcount       ; ASCII, repres
				entant AL 
 0197  E8 01E7 R                        call    outbyte 
                                        outchar ':'             ; separer du co
				ntenu dump 
 019A  B2 3A                  1         mov     dl,':'
 019C  B4 02                  2         mov     ah,2
 019E  CD 21                  2         int     21h
                                        outchar ' ' 
 01A0  B2 20                  1         mov     dl,' '
 01A2  B4 02                  2         mov     ah,2
 01A4  CD 21                  2         int     21h
 01A6  C3                               ret 
                                outcnt  endp 
                                 
 01A7                           outhex  proc    near 
 01A7  BE 0000                          mov     si,0            ; commencer par
				 premier octet dans ligne 
 01AA  8A 02                    oh1:    mov     al,[bp+si]      ; lire cette oc
				tet 
 01AC  E8 01E7 R                        call    outbyte         ; envoyer l… … 
				l'‚cran 
                                        outchar ' ' 
 01AF  B2 20                  1         mov     dl,' '
 01B1  B4 02                  2         mov     ah,2
 01B3  CD 21                  2         int     21h
 01B5  46                               inc     si 
 01B6  83 FE 08                         cmp     si,8            ; ajouter un es
				pace entre les 
 01B9  75 06                            jne     oh2             ; octets 7 et 8
				 pour la claret‚ 
                                        outchar ' ' 
 01BB  B2 20                  1         mov     dl,' '
 01BD  B4 02                  2         mov     ah,2
 01BF  CD 21                  2         int     21h
 01C1  83 FE 10                 oh2:    cmp     si,16           ; lorsque SI=16
				, c'est fini 
 01C4  75 E4                            jne     oh1 
                                        outchar ' '             ; separer dump 
				des ‚quivalents ASCII 
 01C6  B2 20                  1         mov     dl,' '
 01C8  B4 02                  2         mov     ah,2
 01CA  CD 21                  2         int     21h
 01CC  C3                               ret 
                                outhex  endp 
                                 
 01CD                           outasci proc    near 
Microsoft (R) Macro Assembler  Version 4.00                 9/18/87 15:34:29

                                                            Page     1-4
                                                            

 01CD  BE 0000                          mov     si,0            ; faire une bou
				cle avec SI (0-15) 
 01D0  8A 12                    oa1:    mov     dl,[bp+si]      ; l'octet que n
				ous venons de lire 
 01D2  80 E2 7F                         and     dl,7fh          ; d‚sactiver oc
				tet de poids fort 
 01D5  80 FA 20                         cmp     dl,20h          ; caractŠre imp
				rimable ? 
 01D8  73 02                            jae     oa2             ; si oui, saut 
				… la prochaine ‚tape 
 01DA  B2 2E                            mov     dl,'.' 
 01DC                           oa2:    doscall 2               ; impression du
				 caractŠre dans DL 
 01DC  B4 02                  1         mov     ah,2
 01DE  CD 21                  1         int     21h
 01E0  46                               inc     si              ; fin aprŠs 16 
				passages 
 01E1  83 FE 10                         cmp     si,16 
 01E4  75 EA                            jne     oa1 
 01E6  C3                               ret 
                                outasci endp 
                                 
 01E7                           outbyte proc    near 
 01E7  BB 0115 R                        mov     bx,offset hexchar 
 01EA  50                               push    ax              ; sauvgarde qua
				rtet de poids faible 
 01EB  24 F0                            and     al,0f0h         ; avant de l'en
				voyer dans l'‚ther 
 01ED  B1 04                            mov     cl,4            ; rotation de q
				uartet de poids faible AL 
 01EF  D2 C0                            rol     al,cl           ; dans 4 bits i
				nf‚rieurs 
 01F1  D7                               xlat                    ; traduire en ‚
				quivalent h‚xa 
 01F2  8A D0                            mov     dl,al           ; et envoyer en
				 sortie 
                                        doscall 2 
 01F4  B4 02                  1         mov     ah,2
 01F6  CD 21                  1         int     21h
 01F8  58                               pop     ax              ; idem pour qua
				rtet de poids faible 
 01F9  24 0F                            and     al,0fh 
 01FB  D7                               xlat 
 01FC  8A D0                            mov     dl,al 
                                        doscall 2 
 01FE  B4 02                  1         mov     ah,2
 0200  CD 21                  1         int     21h
 0202  C3                               ret 
                                outbyte endp 
                                 
 0203                           code    ends 
                                        end     start 

Microsoft (R) Macro Assembler  Version 4.00                 9/18/87 15:34:29

                                                            Symbols-1
                                                             

Macros:

		N a m e			Lines

DOSCALL  . . . . . . . . . . . .  	   2
OUTCHAR  . . . . . . . . . . . .  	   2

Segments and Groups:

                N a m e         	Size	Align	Combine Class

CODE . . . . . . . . . . . . . .  	0203	PARA	NONE	

Symbols:            

                N a m e         	Type	Value	Attr         

BEGIN  . . . . . . . . . . . . .  	L NEAR	0125	CODE

D1 . . . . . . . . . . . . . . .  	L NEAR	013A	CODE
D2 . . . . . . . . . . . . . . .  	L NEAR	014D	CODE

EOFFLAG  . . . . . . . . . . . .  	L BYTE 	0105	CODE
EXIT . . . . . . . . . . . . . .  	L NEAR	0157	CODE

FCOUNT . . . . . . . . . . . . .  	L WORD 	0103	CODE
FNFMSG . . . . . . . . . . . . .  	L BYTE 	0106	CODE

HEXCHAR  . . . . . . . . . . . .  	L BYTE 	0115	CODE

OA1  . . . . . . . . . . . . . .  	L NEAR	01D0	CODE
OA2  . . . . . . . . . . . . . .  	L NEAR	01DC	CODE
OH1  . . . . . . . . . . . . . .  	L NEAR	01AA	CODE
OH2  . . . . . . . . . . . . . .  	L NEAR	01C1	CODE
OR1  . . . . . . . . . . . . . .  	L NEAR	015C	CODE
OUTASCI  . . . . . . . . . . . .  	N PROC	01CD	CODE	Length = 001A
OUTBYTE  . . . . . . . . . . . .  	N PROC	01E7	CODE	Length = 001C
OUTCNT . . . . . . . . . . . . .  	N PROC	018C	CODE	Length = 001B
OUTHEX . . . . . . . . . . . . .  	N PROC	01A7	CODE	Length = 0026
OUTREC . . . . . . . . . . . . .  	N PROC	0159	CODE	Length = 0033

START  . . . . . . . . . . . . .  	L NEAR	0100	CODE


    126 Source  Lines
    174 Total   Lines
     43 Symbols

  49364 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
